= javascript_pack_tag "staff_edit"
%h1= "Edit ECF ##{@ecf.id}"

%h4 Student Details
%table.table
  %thead
    %tr
      %th{:scope => "col"} Username:
      %th{:scope => "col"} First Name:
      %th{:scope => "col"} Last Name:
      %th{:scope => "col"} Email
      %th{:scope => "col"} Department:
  %tbody
    %tr
      %th{:scope => "row"}
        = @ecf.user.uid
      %td= @ecf.user.givenname
      %td= @ecf.user.sn
      %td= @ecf.user.mail
      %td= @ecf.user.ou

%h4 ECF Details
%p
  %b ECF ID:
  %br
  = @ecf.id

%p
  %b ECF Status:
  %br
  = simple_form_for(@ecf, :url => update_persist_ecf_path(@ecf), :defaults => { :input_html => { :class => "cursor_hover" } }) do |f|
    = f.select :status, options_for_select(["Pending", "Complete"], @ecf.status)
    = f.button :submit, value: 'Update status',class: 'btn btn-outline-primary btn-sm ml-5'
    %br
    %div.alert.alert-dark.mt-3 Setting an ECF as 'complete' will remove it from the view of pending ECFs.

%p
  %b Type(s) of Circumstances: 
  %br
  - if @ecf.is_serious_short_term 
    Serious short term illness / accident / hospitalisation
    %br
  - if @ecf.is_deterioration_of_disability
    Deterioration or fluctuation of a disability / long term health condition
    %br
  - if @ecf.is_bereavement
    Bereavement
    %br
  - if @ecf.is_significant_adverse_personal
    Significant adverse personal / family circumstances.
    %br
  - if @ecf.is_other_exceptional_factors
    Other exceptional factors
    %br
  - if @ecf.is_frequent_absence
    Frequent absence of less than 7 calendar days
    %br

%p
  %b Duration of Circumstances:
  %br
  = @ecf.start_of_circumstances
  %i to
  = @ecf.end_of_circumstances

%p
  %b Details of Circumstances:
  %textarea#exampleFormControlTextarea1.form-control.rounded-0{:readonly => "readonly", :rows => "10"}= @ecf.details

%p 
  %b Supporting evidence:
  - @ecf.upload_medical_evidence.each do |medical_evidence|
    %br
    #uploaded_file= link_to medical_evidence.filename, medical_evidence, target: :_blank
    = link_to "Delete attachment", purge_attachment_path(medical_evidence), method: :delete,class: "btn btn-outline-danger btn-sm ml-5"

%p
  = simple_form_for(@ecf, :url => update_persist_ecf_path(@ecf), :defaults => { :input_html => { :class => "cursor_hover" } }) do |f|
    + Add supporting evidence:
    = f.file_field :upload_medical_evidence, multiple: true, accept: 'application/pdf'
    %br
    %i (Uploaded evidence will be visible to the student.)
    #update_evi_btn= f.button :submit, value: 'Update evidence',class: 'btn btn-outline-primary btn-sm '

%p
  %h4 Student notes
  = simple_form_for(@ecf, :url => update_persist_ecf_path(@ecf), :defaults => { :input_html => { :class => "cursor_hover " } }) do |f|
    = link_to_add_nested(f, :ecf_notes, '#ecf-notes-student', partial: 'ecf_notes/ecf_note_student_fields') do
      %button + Add a Student note

    #ecf-notes-student
  
  - if @ecf_notes_grouped[1].nil?
    %i There are currently no student notes.
  - else 
    - @ecf_notes_grouped[1].each do |ecf_note|
      %p 
        %b Note: 
        = ecf_note.description
        %br
          %i.some{:style => "color:dimgrey"}
            %b Submitted by:
            = "#{ecf_note.user.givenname} #{ecf_note.user.sn}, "
            %b Note created at:
            = ecf_note.created_at
            - if ecf_note.user_id == current_user.id
              = link_to "Delete note", ecf_note_path(ecf_note), method: :delete

%p
  %h4 Module leader notes
  = simple_form_for(@ecf, :url => update_persist_ecf_path(@ecf), :defaults => { :input_html => { :class => "cursor_hover" } }) do |f|
    = link_to_add_nested(f, :ecf_notes, '#ecf-notes-module-leader', partial: 'ecf_notes/ecf_note_module_leader_fields',link_classes: "mt-5") do
      %button + Add a Student note

    #ecf-notes-module-leader

  - if @ecf_notes_grouped[2].nil?
    %i There are currently no module leader notes.
  - else 
    - @ecf_notes_grouped[2].each do |ecf_note|
      %p 
        %b Note: 
        = ecf_note.description
        %br
          %i.some{:style => "color:dimgrey"}
            %b Submitted by:
            = "#{ecf_note.user.givenname} #{ecf_note.user.sn}, "
            %b Note created at:
            = ecf_note.created_at
            - if ecf_note.user_id == current_user.id
              = link_to "Delete note", ecf_note_path(ecf_note), method: :delete

%p
  %h4 Scrutiny panel notes
  = simple_form_for(@ecf, :url => update_persist_ecf_path(@ecf), :defaults => { :input_html => { :class => "cursor_hover" } }) do |f|
    = link_to_add_nested(f, :ecf_notes, '#ecf-notes-scrutiny', partial: 'ecf_notes/ecf_note_scrutiny_fields') do
      %button + Add a Student note

    #ecf-notes-scrutiny

  - if @ecf_notes_grouped[3].nil?
    %i There are currently no scrutiny panel notes.
  - else 
    - @ecf_notes_grouped[3].each do |ecf_note|
      %p 
        %b Note: 
        = ecf_note.description
        %br
          %i.some{:style => "color:dimgrey"}
            %b Submitted by:
            = "#{ecf_note.user.givenname} #{ecf_note.user.sn}, "
            %b Note created at:
            = ecf_note.created_at
            - if ecf_note.user_id == current_user.id
              = link_to "Delete note", ecf_note_path(ecf_note), method: :delete

%p
  %h4 Scrutiny chair notes
  = simple_form_for(@ecf, :url => update_persist_ecf_path(@ecf), :defaults => { :input_html => { :class => "cursor_hover" } }) do |f|
    = link_to_add_nested(f, :ecf_notes, '#ecf-notes-admin', partial: 'ecf_notes/ecf_note_admin_fields') do
      %button#add_note + Add a Student note

    #ecf-notes-admin

  - if @ecf_notes_grouped[4].nil?
    %i There are currently no module leader notes.
  - else 
    - @ecf_notes_grouped[4].each do |ecf_note|
      %p 
        %b Note: 
        = ecf_note.description
        %br
          %i.some{:style => "color:dimgrey"}
            %b Submitted by:
            = "#{ecf_note.user.givenname} #{ecf_note.user.sn}, "
            %b Note created at:
            = ecf_note.created_at
            - if ecf_note.user_id == current_user.id
              = link_to "Delete note", ecf_note_path(ecf_note), method: :delete, class: "btn btn-outline-danger btn-sm"