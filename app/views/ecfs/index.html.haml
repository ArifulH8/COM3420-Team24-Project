%link{:href => "https://fonts.googleapis.com/css?family=Lato:300,400,700&display=swap", :rel => "stylesheet"}/
= javascript_pack_tag "ecf_preview"
%body-1
- if current_user.student?
  = render 'index_student'
- elsif current_user.module_leader?
  = render 'index_module_leader'
- else
  %section.ftco-section
    .container.animate__animated.animate__fadeIn
      .row.justify-content-center
        .col-md-6.text-center.mb-5
          %h2.heading-section Listing ECFs


      .row.justify-content-center
        .ecf-preview
          .row
            .col
              %p.txt-centre#col1
              - if current_user.role == "module_leader"
                There #{@ecfs_ids.size == 1 ? 'is' : 'are'}
                %span#num1 #{pluralize @ecfs_ids.size, 'ecf'}
              - else
                There #{@ecfs.size == 1 ? 'is' : 'are'}
                %span#num1 #{pluralize @ecfs.size, 'ecf'}
              - if current_user.role == "admin"
                %p.txt-centre
                  = link_to "ECFs which need to be removed from the system as per the GDPR Policy", ecfs_gdpr_ecfs_path

          - if can? :create, Ecf
            .row.justify-content-center.mb-5
              .col-md-6.text-center
                %br
                %a.button.btn.btn-outline-primary.btn-sm{:href => new_ecfs_path} Create New ECF

          - if can? :search, Ecf
            .table-responsive
              %table.table.table-sm.table-bordered.mb-4
                %thead.thead-light
                  = search_form_for @q do |f|
                    %tr
                      %th{:scope => "col"}= f.label "Ecf status"
                      %th{:scope => "col"}= f.label "First / Last name"
                      %th{:scope => "col"}= f.label "Student Email"
                      %th{:scope => "col"}= f.label "Requested Action"
                      %th{:scope => "col"}

                    %tbody
                      = search_form_for @q do |f|
                        %tr
                          %th= f.select(:status_eq, options_for_select(Ecf.distinct.pluck(:status)), { include_blank: true })
                          %td= f.search_field :user_givenname_or_user_sn_cont
                          %td= f.search_field :user_email_cont
                          %td= f.search_field :affected_units_requested_action_cont
                          %td= f.submit "Search"
          - if current_user.module_leader?
            The following are all ECFs which 
          .table-responsive
            %table.table
            -if @ecfs.empty?
              %p.alert.alert-primary No result found! Please check your search criteria.
            -else
              .table-responsive
                %table.table
                  %thead
                    %tr
                      %th{:scope => "col"} Status
                      %th{:scope => "col"} Contains DEX?
                      %th{:scope => "col"} Date Submitted
                      %th{:scope => "col"} Student Full Name
                      %th{:scope => "col"} Email
                      %th{:scope => "col"} Username
                      %th{:scope => "col"} Department
                      %th{:scope => "col"} Affected Units
                      %th
                      %th
                  %tbody
                    - @ecfs.each do |ecf|
                      - if current_user.role == "module_leader"
                        - if @ecfs_ids.include? ecf.id
                          %tr
                            %td= ecf.status
                            - if ecf.affected_units.exists?(requested_action: "DEX - Deadline Extension")
                              %td Yes
                            - else
                              %td No
                            %td= ecf.created_at.strftime("%Y-%m-%d")
                            %td #{ecf.user.givenname} #{ecf.user.sn}
                            %td= ecf.user.mail
                            %td= ecf.user.uid
                            %td= ecf.user.ou
                            %td
                              - ecf.affected_units.where(unit_code: current_user.user_modules.pluck(:module_code)).limit(5).each do |affected_unit|
                                %b= "#{affected_unit.unit_code} : "
                                %i= "#{affected_unit.assessment_type} "
                                %i= affected_unit.requested_action.split(' ')[0]
                                %br
                            %td= link_to 'Show', ecf
                            - if can? :edit, Ecf
                              -if current_user.student?
                                -if ecf.decisions.size == 0
                                  %td= link_to 'Edit', edit_ecf_path(ecf)
                                -else
                                  %td Decisons have been made. Cannot edit ECF.
                              -else
                                %td= link_to 'Edit', edit_ecf_path(ecf)
                            - if(params.has_key?(:meeting_id))
                              %td= link_to "Add to meeting ##{params[:meeting_title]}", agendas_path(:agenda => {:ecf_id => ecf.id, :meeting_id => params[:meeting_id]}), :method => :post
                      - else
                        %tr
                          %td= ecf.status
                          - if ecf.affected_units.exists?(requested_action: "DEX - Deadline Extension")
                            %td Yes
                          - else
                            %td No
                          %td= ecf.created_at.strftime("%Y-%m-%d")
                          %td #{ecf.user.givenname} #{ecf.user.sn}
                          %td= ecf.user.mail
                          %td= ecf.user.uid
                          %td= ecf.user.ou
                          %td
                            - ecf.affected_units.limit(5).each do |affected_unit|
                              %b= "#{affected_unit.unit_code} : "
                              %i= "#{affected_unit.assessment_type} "
                              %i= affected_unit.requested_action.split(' ')[0]
                              %br
                          %td= link_to 'Show', ecf
                          - if can? :edit, Ecf
                            -if current_user.student?
                              -if ecf.decisions.size == 0
                                %td= link_to 'Edit', edit_ecf_path(ecf)
                              -else
                                %td Decisons have been made. Cannot edit ECF.
                            -else
                              %td= link_to 'Edit', edit_ecf_path(ecf)
                          - if(params.has_key?(:meeting_id))
                            %td= link_to "Add to meeting ##{params[:meeting_title]}", agendas_path(:agenda => {:ecf_id => ecf.id, :meeting_id => params[:meeting_id]}), :method => :post
        - if(params.has_key?(:meeting_id))
          %td= link_to 'Back', meetings_path, :class => 'btn btn-outline-primary'






