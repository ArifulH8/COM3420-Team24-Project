:javascript
  window.onload=function(){
       if(document.getElementById('num1').innerText != 0) {
        document.getElementById('num1').classList.add('num_colour');
        document.getElementById('col1').classList.add('animate__animated', 'animate__bounce');
    }
  }
%h1 Listing users

%p#col1
  There #{@users.size == 1 ? 'is' : 'are'} 
  %span#num1 #{pluralize @users.size, 'user'}

  = search_form_for @q do |f|
    = f.label "Username"
    = f.search_field :uid_cont
    
    = f.label "Email"
    = f.search_field :mail_cont
    
    = f.label "Department"
    = f.select(:ou, User.all.collect {|user| [user.ou, user.id]}, { include_blank: true })
    
    = f.label "Role"
    = f.select(:role_eq, options_for_select(User.roles.map {|k, v| [k.humanize.capitalize, v]}, f.object.role_eq), { include_blank: true })

    = f.submit "Search"


%ul.list-group.list-group-flush
  %li.list-group-item
    %p<
      To assign a role to a staff member not already in this users table:
      #btn_new_user= link_to 'New User', new_user_path, class: 'btn btn-primary'
  %li.list-group-item
    %p<
      To upload a csv file to create new module leaders:
      #btn_csv_upload= link_to 'CSV Upload', csv_upload_users_path, class: 'btn btn-primary'

  %li.list-group-item
    .table-responsive
      %table.table
        %thead
          %tr
            %th Username
            %th Email
            %th Given name
            %th Surname
            %th Department
            %th Group
            %th Role

        %tbody
          - @users.each do |user|
            %tr
              %td= user.uid
              %td= user.mail
              %td= user.givenname
              %td= user.sn
              %td= user.ou
              %td= ((user.dn).split( /, */ )[2]).chars.last((((user.dn).split( /, */ )[2]).length)-3).join
              %td= user.role
              %td= link_to 'Show', user
              %td= link_to 'Edit', edit_user_path(user)
